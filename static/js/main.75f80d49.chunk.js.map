{"version":3,"sources":["store/hooks/useHttp.js","store/constant.js","page/Contribute.jsx","assets/icon/thumbs-up.svg","store/actions.js","store/reducer.js","store/hooks/useCountdown.js","components/Button/index.jsx","components/Countdown/index.jsx","components/AreaPlayer/index.jsx","store/utils.js","components/ModalQuestion/index.jsx","page/Home.jsx","App.js","index.js","components/AreaPlayer/AreaPlayer.module.css","components/Countdown/Countdown.module.css","components/ModalQuestion/ModalQuestion.module.css"],"names":["useHttp","API_KEY","INITIAL_STATE","isReady","isStart","playerTurn","isShowQuestion","listQuestions","RESTART","SHOW_QUESTION","READY","UPDATE_QUESTIONS","Contribute","restart","type","showQuestion","payload","updateQuestions","newQuestions","reducer","state","action","Error","useCountdown","amount","callback","useState","countdown","setCountdown","useEffect","timerId","setInterval","clearInterval","Button","children","once","onClick","props","counter","setCounter","disabled","Countdown","fallback","playerId","className","classes","AreaPlayer","answerTurn","dispatch","isMe","playSection","console","log","acceptButton","actions","Math","floor","random","readyCaption","icon","src","thumbsUp","alt","buttonReady","areaPlayer","ModalQuestion","questions","onUpdateQuestions","question","setQuestion","_randomQuestion","length","filteredQuestions","filter","id","randomQuestion","modalQuestion","content","defaultProps","Home","useReducer","GameReducer","a","fetch","response","json","key","responseData","transformedData","push","getQuestions","error","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.75f80d49.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useHttp(API_URL) {\r\n  const [data, setData] = useState(null);\r\n  const [status, setStatus] = useState(\"pending\");\r\n\r\n  const sendRequest = async (method, data = null) => {\r\n    const configRequest = {\r\n      method: method,\r\n    };\r\n\r\n    if (data) {\r\n      configRequest.body = JSON.stringify(data);\r\n    }\r\n\r\n    setStatus(\"pending\");\r\n    const response = await fetch(API_URL, configRequest);\r\n    if (!response.ok) {\r\n      setStatus(\"failed\");\r\n      throw new Error(\"Failed to get data\");\r\n    }\r\n\r\n    const responseData = (await response.json()) || \"completed\";\r\n    const transformedData = [];\r\n    for (const key in responseData) {\r\n      transformedData.push(responseData[key]);\r\n    }\r\n\r\n    setData(transformedData);\r\n    setStatus(\"success\");\r\n  };\r\n\r\n  return [sendRequest, data, status];\r\n}\r\nexport default useHttp;\r\n","const API_KEY =\r\n  \"https://deep-love-app-default-rtdb.asia-southeast1.firebasedatabase.app\";\r\n\r\nconst INITIAL_STATE = {\r\n  isReady: 0,\r\n  isStart: false,\r\n  playerTurn: null,\r\n  isShowQuestion: false,\r\n  listQuestions: [],\r\n};\r\n\r\nconst RESTART = \"RESTART\";\r\nconst SHOW_QUESTION = \"SHOW_QUESTION\";\r\nconst READY = \"READY\";\r\nconst UPDATE_QUESTIONS = \"UPDATE_QUESTIONS\";\r\n\r\nexport {\r\n  API_KEY,\r\n  INITIAL_STATE,\r\n  RESTART,\r\n  SHOW_QUESTION,\r\n  READY,\r\n  UPDATE_QUESTIONS,\r\n};\r\n","import React from 'react';\r\nimport { Container, Title, Accordion } from '@mantine/core';\r\nimport ContributeForm from '../components/Contribute/Form';\r\nimport QuestionsContributed from '../components/Contribute/ListQuestion';\r\n\r\nfunction Contribute(props) {\r\n  return (\r\n  <>\r\n    <Container style={{margin: '5rem auto', width: '800px'}} padding={15} fluid={true}>\r\n    <Title order={1}>This is h1 title</Title>\r\n      <ContributeForm/>\r\n      <Accordion iconPosition=\"right\">\r\n        <Accordion.Item label=\"Danh sách câu hỏi\">\r\n          <QuestionsContributed/>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Contribute;","export default __webpack_public_path__ + \"static/media/thumbs-up.d53868eb.svg\";","import { READY, RESTART, SHOW_QUESTION, UPDATE_QUESTIONS } from \"./constant\";\r\n\r\nexport const restart = () => {\r\n  return {\r\n    type: RESTART,\r\n  };\r\n};\r\n\r\nexport const showQuestion = (payload) => {\r\n  return {\r\n    type: SHOW_QUESTION,\r\n    playerTurn: payload,\r\n  };\r\n};\r\n\r\nexport const isReady = () => {\r\n  return {\r\n    type: READY,\r\n  };\r\n};\r\n\r\nexport const updateQuestions = (payload) => {\r\n  return {\r\n    type: UPDATE_QUESTIONS,\r\n    newQuestions: payload,\r\n  };\r\n};\r\n","import { READY, RESTART, SHOW_QUESTION, UPDATE_QUESTIONS } from \"./constant\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return {\r\n        ...state,\r\n        isShowQuestion: false,\r\n        playerTurn: null,\r\n      };\r\n    case SHOW_QUESTION:\r\n      return {\r\n        ...state,\r\n        isReady: 0,\r\n        isStart: false,\r\n        isShowQuestion: true,\r\n        playerTurn: action.playerTurn,\r\n      };\r\n    case READY:\r\n      if (state.isReady < 1) {\r\n        return {\r\n          ...state,\r\n          isReady: (state.isReady += 1),\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        isShowQuestion: false,\r\n        isStart: true,\r\n      };\r\n    case UPDATE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        listQuestions: [...action.newQuestions],\r\n      };\r\n    default:\r\n      throw new Error(\"Invalid action\");\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useCountdown(amount, callback) {\r\n  const [countdown, setCountdown] = useState(amount);\r\n  useEffect(() => {\r\n    const timerId =\r\n      countdown > 0\r\n        ? setInterval(() => {\r\n            setCountdown(countdown - 1);\r\n          }, 1000)\r\n        : callback();\r\n\r\n    return () => {\r\n      return clearInterval(timerId);\r\n    };\r\n  }, [countdown, callback]);\r\n\r\n  return [countdown];\r\n}\r\n\r\nexport default useCountdown;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\nButton.propTypes = {\r\n  once: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nfunction Button({children,once, onClick, ...props}) {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleOnClick = () => {\r\n    if (once) {\r\n      setCounter(counter + 1);\r\n    }\r\n\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <button {...props} onClick={handleOnClick} disabled={counter >= 1}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useCountdown } from '../../store';\r\nimport classes from './Countdown.module.css';\r\n\r\nCountdown.propTypes = {\r\n  amount: PropTypes.number,\r\n  fallback: PropTypes.func,\r\n  playerId: PropTypes.string,\r\n};\r\n\r\nfunction Countdown({amount, fallback, playerId}) {\r\n  const [countdown] = useCountdown(amount, fallback);\r\n  return (\r\n    <div className={classes.countdown} data-player-id={playerId}>\r\n      {countdown}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport thumbsUp from '../../assets/icon/thumbs-up.svg';\r\nimport { actions, randomPlayerId } from \"../../store\";\r\nimport Button from '../Button';\r\nimport Countdown from '../Countdown';\r\nimport classes from './AreaPlayer.module.css';\r\n\r\nfunction AreaPlayer({playerId, isStart, answerTurn, dispatch}) {\r\n  const isMe = answerTurn === playerId;\r\n  let playSection = null;\r\n  \r\n  const finish = () => {\r\n    console.log('im finish');\r\n  }\r\n  \r\n  const handleFinishCountDown = () => {\r\n    const playerId = randomPlayerId() + \"\";\r\n    console.log(\"random playerid \", playerId);\r\n    dispatch(actions.showQuestion(playerId));\r\n  };\r\n\r\n  const handleIsReady = () => {\r\n    dispatch(actions.isReady());\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    dispatch(actions.restart());\r\n  };\r\n\r\n  if (answerTurn) {\r\n    playSection = (\r\n      <>\r\n        {(isMe) ?<><Countdown amount={30} fallback={finish}/></>: <button className={classes.acceptButton} onClick={handleRestart}>Accept</button>}\r\n      </>\r\n    )\r\n  } else {\r\n    playSection = (\r\n      <>\r\n        {isStart ? <Countdown amount={3} fallback={handleFinishCountDown}/> :\r\n          <div className={classes.readyCaption}>\r\n            <div className={classes.icon}>\r\n              <img src={thumbsUp} alt='icon'/>\r\n            </div>\r\n            Ready to play\r\n          </div>}\r\n        <Button className={classes.buttonReady} data-player-id={playerId} onClick={handleIsReady} once>Start</Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.areaPlayer} data-player-id={playerId}>\r\n     {playSection}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AreaPlayer;","function randomPlayerId() {\r\n  return Math.floor(Math.random() * (2 - 1 + 1) + 1);\r\n}\r\n\r\nexport { randomPlayerId };\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport classes from './ModalQuestion.module.css';\r\n\r\nModalQuestion.propTypes = {\r\n  question: PropTypes.string\r\n};\r\n\r\nModalQuestion.defaultProps = {\r\n  question: null\r\n}\r\n\r\nfunction randomQuestion(questions) {\r\n const randomIndex = Math.floor(Math.random() * (questions.length - 1)  + 1);\r\n const _randomQuestion = questions[randomIndex];\r\n const filteredQuestions = questions.filter(question => question.id !== _randomQuestion.id )\r\n\r\n return [_randomQuestion, filteredQuestions];\r\n}\r\n\r\nfunction ModalQuestion({questions, onUpdateQuestions, playerTurn}) {\r\n  const [question, setQuestion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const [question, filteredQuestions] = randomQuestion(questions);\r\n    setQuestion(question);\r\n    onUpdateQuestions(filteredQuestions);\r\n    return () => {\r\n      setQuestion(null)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.modalQuestion} data-player-turn={playerTurn}>\r\n      <div className=\"icon\"></div>\r\n      {question ? (<h3>Câu hỏi: {question.content}</h3> ): 'Đã hết câu hỏi'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalQuestion;","import React, { useReducer, useEffect } from 'react';\r\nimport AreaPlayer from '../components/AreaPlayer';\r\nimport ModalQuestion from '../components/ModalQuestion';\r\nimport { actions, GameReducer } from '../store';\r\nimport { INITIAL_STATE, API_KEY } from '../store/constant';\r\n\r\nfunction Home(props) {\r\n  const [state, dispatch] = useReducer(GameReducer, INITIAL_STATE);\r\n  const { isStart, isShowQuestion, listQuestions, playerTurn } = state;\r\n\r\n  useEffect(() => {\r\n    async function getQuestions() {\r\n      const response = await fetch(`${API_KEY}/questions.json`);\r\n      const responseData = await response.json();\r\n      const transformedData = [];\r\n      for (const key in responseData) {\r\n        transformedData.push(responseData[key]);\r\n      }\r\n\r\n      dispatch(actions.updateQuestions(transformedData));\r\n    }\r\n    try {\r\n      getQuestions();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  const handleUpdateQuestions = (newQuestions) => {\r\n    dispatch(actions.updateQuestions(newQuestions));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AreaPlayer\r\n        playerId=\"1\"\r\n        isStart={isStart}\r\n        answerTurn={playerTurn}\r\n        dispatch={dispatch}\r\n      />\r\n      <AreaPlayer\r\n        playerId=\"2\"\r\n        isStart={isStart}\r\n        answerTurn={playerTurn}\r\n        dispatch={dispatch}\r\n      />\r\n      {isShowQuestion && (\r\n        <ModalQuestion\r\n          questions={listQuestions}\r\n          onUpdateQuestions={handleUpdateQuestions}\r\n          playerTurn={playerTurn}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Contribute from \"./page/Contribute\";\r\nimport Home from \"./page/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"deepLove\">\r\n      <Home />\r\n      {/* <Routes>\r\n        <Route path=\"/contribute\" element={<Contribute />} />\r\n        <Route path=\"/\" element={<Home />} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"areaPlayer\":\"AreaPlayer_areaPlayer__11GlF\",\"buttonReady\":\"AreaPlayer_buttonReady__9CIy3\",\"clicked\":\"AreaPlayer_clicked__2TOsv\",\"acceptButton\":\"AreaPlayer_acceptButton__1ZIEE\",\"icon\":\"AreaPlayer_icon__3_0tM\",\"readyCaption\":\"AreaPlayer_readyCaption__1JqBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countdown\":\"Countdown_countdown__q5ASo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalQuestion\":\"ModalQuestion_modalQuestion__2Th7V\",\"appear1\":\"ModalQuestion_appear1__2XCQY\",\"appear2\":\"ModalQuestion_appear2__3kbZt\"};"],"sourceRoot":""}